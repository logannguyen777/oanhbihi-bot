worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # üö™ HTTP -> HTTPS Redirect
    server {
        listen 80;
        server_name fta.thefirst.ai backend.fta.thefirst.ai;

        location /.well-known/acme-challenge/ {
            alias /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # üíé HTTPS Server with SSL
    server {
        listen 443 ssl;
        server_name fta.thefirst.ai backend.fta.thefirst.ai;

        ssl_certificate     /etc/nginx/certs/live/fta.thefirst.ai/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/live/fta.thefirst.ai/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # ‚ú® Frontend (Vue / React)
        location / {
            proxy_pass http://frontend:80;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # ‚ú® Backend API
        location /api/ {
            proxy_pass http://backend:8000;
            rewrite ^/api(/.*)$ $1 break;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # ‚ú® WebSocket logs
        location /ws/logs {
            proxy_pass http://backend:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }

        # üö´ B·∫£o m·∫≠t Git & th∆∞ m·ª•c nh·∫°y c·∫£m
        location ~* /\.git {
            deny all;
            return 403;
        }
        location ~* /(backup|staging_area|build|scripts|ci|modules)/\.git {
            deny all;
            return 403;
        }

        # üõ°Ô∏è Ch·∫∑n bot l9explore
        if ($http_user_agent ~* "l9explore") {
            return 403;
        }
    }
}
